{
    "frontend": {
        "requestFileName": "<% moduleName %>",
        "freeSpaceInByte": "<% FileHandler(location='/').free_space %>",
        "usedSpaceInByte": "<% FileHandler(location='/').disk_used_space %>",
        "startTimeStamp": "<% __time_stamp__ %>"
    },
    "both": {
        "lastDataWriteDateTimeHeaderName": "<% session['dataDescriptionPrefix'] %>LastDataWriteDateTime",
        "session": {
            "dataDescriptionPrefix": "application",
            "expirationTimeDelta": 3600,
            "key": {
                "token": "<% session['dataDescriptionPrefix'] %>SessionToken",
                "userID": "<% session['dataDescriptionPrefix'] %>UserID",
                "expiration": "<% session['dataDescriptionPrefix'] %>SessionExpirationDateTime",
                "location": "<% session['dataDescriptionPrefix'] %>Location"
            }
        },

        "location": {
            "webAsset": "/webAsset/",
            "template": "<% location['webAsset'] %>template/",
            "medium": "<% location['webAsset'] %>medium/"
        },

        "encoding": "utf_8",

        "defaultLanguage": "enUS",
        "model": {
            "authentication": {
                "password": {
                    "minimumLength": 4,
                    "maximumLength": 100,
                    "pattern": "....+"
                },
                "simplePassword": {
                    "minimumLength": 1,
                    "maximumLength": 50,
                    "pattern": "[a-zA-Z0-9_-]+"
                }
            }
        },
        "allowedTypes": {
            "image": [
                "image/jpg", "image/jpeg", "image/pjpeg", "image/png",
                "image/svg+xml", "image/svg", "image/vnd.microsoft.icon",
                "image/x-icon", "image/gif", "image/tiff",
                "image/vnd.wap.wbmp", "image/x-icon", "image/x-jng",
                "image/x-ms-bmp", "image/svg+xml", "image/webp"
            ],
            "audio": [
                "audio/midi", "audio/mpeg", "audio/ogg", "audio/x-m4a",
                "audio/x-realaudio"
            ],
            "video": [
                "video/webm", "video/3gpp", "video/mp2t", "video/mp4",
                "video/mpeg", "video/quicktime", "video/x-flv",
                "video/x-m4v", "video/x-mng", "video/x-ms-asf",
                "video/x-ms-wmv", "video/x-msvideo",
                "application/x-shockwave-flash"
            ],
            "data": [
                "application/xml", "text/csv", "application/xml", "text/xml",
                "application/atom+xml", "application/rss+xml",
                "application/json", "application/vnd.google-earth.kml+xml",
                "application/vnd.google-earth.kmz", "application/xhtml+xml",
                "application/xspf+xml"
            ],
            "document": [
                "text/plain", "text/html", "text/css", "text/mathml",
                "text/vnd.wap.wml", "application/pdf",
                "application/postscript", "application/rtf",
                "application/vnd.apple.mpegurl", "application/vnd.ms-excel",
                "application/vnd.ms-powerpoint", "application/vnd.wap.wmlc",
                "application/msword",
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                "application/vnd.openxmlformats-officedocument.presentationml.presentation"
            ],
            "script": [
                "application/javascript", "application/x-cocoa",
                "application/x-perl", "text/x-python"
            ],
            "font": [
                "application/vnd.ms-fontobject", "application/font-woff"
            ],
            "binary": [
                "application/java-archive", "application/x-7z-compressed",
                "application/zip", "application/octet-stream",
                "application/octet-stream", "application/x-rar-compressed"
            ],
            "knownOther": [
                "text/x-component", "text/vnd.sun.j2me.app-descriptor",
                "application/mac-binhex40", "application/x-java-archive-diff",
                "application/x-java-jnlp-file", "application/x-makeself",
                "application/x-pilot", "application/x-redhat-package-manager",
                "application/x-sea", "application/x-stuffit",
                "application/x-tcl", "application/x-x509-ca-cert",
                "application/x-xpinstall"
            ]
        }
    },
    "backend": {
        "finalOptionConsolidation": true,
        "systemCommands": {
            "reloadProxyServer": "/usr/bin/env sudo nginx -s reload"
        },
        "jsonpGetParameterIndicator": ["jsonp", "callback"],
        "restResponseTemplate": ")]}',\n%s",
        "initialTemplateRendering": true,
        "secretDjangoKey": "",
        "removeDuplicatedRequestKey": false,
        "databaseEnginePrefix": "sqlite:///",
        "maximumCookieAgeInSeconds": 31536000,
        "model": {
            "generic": {
                "latitude": {"minimum": 0, "maximum": 90},
                "longitude": {"minimum": 0, "maximum": 180},
                "filePath": {
                    "minimumLength": 1, "maximumLength": 32000,
                    "pattern": ".+",
                    "fileReference": "<% location['medium'] %>%s"
                },
                "fileName": {
                    "minimumLength": "<% model['generic']['filePath']['minimumLength'] %>",
                    "maximumLength": 255,
                    "pattern": "<% model['generic']['filePath']['pattern'] %>",
                    "fileReference": "<% location['medium'] %>%s"
                },
                "text": {"pattern": "(\\s|.)*"},
                "url": {
                    "minimumLength": 1, "maximumLength": 2000, "pattern": ".+"
                },
                "eMailAddress": {
                    "minimumLength": 5,
                    "maximumLength": 100,
                    "pattern": "((admin)|([_A-Za-z0-9\\-+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})))"
                },
                "phoneNumber": {
                    "minimumLength": 1,
                    "maximumLength": 50,
                    "minimum": 0,
                    "maximum": 9999999999999999999999999999999999999999999999,
                    "pattern": "([0-9-+()]+(/|-)?[0-9-+]+)?"
                },
                "zipCode": {
                    "maximumLength": 50,
                    "minimumLength": 1,
                    "pattern": "[0-9]+",
                    "default": "0"
                },
                "languageSpecific": {"default": {}}
            },
            "authentication": {
                "sessionToken": {"length": 32},
                "password": {
                    "salt": {"length": 32}, "pepper": "pepperExample"
                }
            }
        },
        "defaultIndentLevel": 4,
        "authenticationMethod": "header",

        "delimiterPattern": "(!|\\?)",
        "webServer": {
            "root": "/", "default": "<% location['htmlFile']['frontend'] %>",
            "requestWhitelist": [
                "GET|POST|DELETE|PUT|PATCH:/<% moduleName %><% delimiterPattern %>.+",
                "GET:(/|(<% location['webAsset'] %>.+))",
                "PUT:<% location['medium'] %>?"
            ],
            "publicKeyFilePath": "",
            "requestParameterDelimiter": "<% delimiterPattern %>",
            "authentication": false, "moduleLoading": "<% moduleName %>",
            "authenticationFileName": "", "stopOrder": "",
            "directoryListing": false, "maximumNumberOfProcesses": 0
        },
        "location": {
            "htmlFile": {
                "frontend": "/index.html", "backend": "/admin.html",
                "template": "<% location['template'] %>index.html.tpl"
            },
            "offlineManifestTemplateFile": "<% location['template'] %>offlineManifest.tpl",
            "cache": "/cache/",
            "webCache": "<% location['cache'] %>web/",
            "templateCache": "<% location['cache'] %>template/",
            "certificate": {
                "folder": "/certificate/",
                "pem": "<% location['certificate']['folder'] %>default.pem",
                "key": "<% location['certificate']['folder'] %>default.key",
                "crt": "<% location['certificate']['folder'] %>default.crt"
            },
            "backup": "/backup/",
            "database": {
                "folder": "/database/",
                "url": "<% location['database']['folder'] %>data",
                "restDataTimestampReferenceFilePath": "<% location['database']['folder'] %>dataTimestamp",
                "schemaFile": "<% location['database']['folder'] %>schema.json",
                "backup": "<% location['backup'] %>database/"
            },
            "templateIgnored": [
                "<% location['backup'] %>", "<% location['webCache'] %>",
                "/boostNode/", "/webNode/", "/database/", "/.git/"]
        },

        "ignoreWebAssetPattern": [".*\\.swp", "\\..*"],

        "exportableFileAttributes": [
            "path", "name", "basename", "encoding", "extension",
            "extension_suffix", "timestamp", "size", "human_readable_size",
            "type", "mime_type"
        ],

        "commandLineArguments": [{
            "arguments": ["-w", "--web-cache"],
            "keywords": {
                "action": "store_true",
                "default": false,
                "help": "Activates the static file full web cache.",
                "dest": "web_cache"
            }
        }, {
            "arguments": ["-r", "--render-template"],
            "keywords": {
                "action": "store_true",
                "default": false,
                "help": "Indicates weather the application should simply render the main html entry file and terminate.",
                "dest": "render_template"
            }
        }, {
            "arguments": ["-n", "--host-name"],
            "keywords": {
                "action": "store",
                "default": "127.0.0.1",
                "type": {"execute": "str"},
                "required": false,
                "help": "Defines application server host name. If you want to make your application server reachable from any incoming domain use the empty string. The default is only listing on requests which comes from the same operating system.",
                "dest": "host_name",
                "metavar": "STRING"
            }
        }, {
            "arguments": ["-a", "--proxy-host-name-pattern"],
            "keywords": {
                "action": "store",
                "default": ".+",
                "type": {"execute": "str"},
                "required": false,
                "help": "Defines the proxy host name pattern. The default is to listen on any incoming domain.",
                "dest": "proxy_host_name_pattern",
                "metavar": "PATTERN"
            }
        }, {
            "arguments": ["-p", "--port"],
            "keywords": {
                "action": "store",
                "default": 8080,
                "type": {"execute": "int"},
                "choices": {"execute": "range(2 ** 16)"},
                "required": false,
                "help": "Defines the port number to access the web server. If zero given a free port will be determined.",
                "dest": "port",
                "metavar": "NUMBER"
            }
        }, {
            "arguments": ["-i", "--proxy-ports"],
            "keywords": {
                "action": "store",
                "nargs": "*",
                "default": [80],
                "type": {"execute": "int"},
                "required": false,
                "help": "Defines the proxy port numbers to listen for.",
                "dest": "proxy_ports",
                "metavar": "PORTS"
            }
        }]
    }
}
